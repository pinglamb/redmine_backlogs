#!/bin/bash

CONFIG="$( cd "$( dirname "$0" )" && pwd )"
CONFIG="$CONFIG/rbl-reinstall.rc"

GEMSET=`rvm-prompt g | sed -e 's/@//'`
if [ -z "$GEMSET" ]; then
  echo "No gemset"
  exit
fi

if [ ! -f $CONFIG ]; then
    echo "$CONFIG does not exist"
    exit
fi

source $CONFIG

if [ -z "$VERSION" ]; then
    echo "VERSION not set"
    exit
fi

if [ -z "$DBROOTPW" ]; then
    echo "DBROOTPW not set"
    exit
fi
if [ -z "$DBPW" ]; then
    echo "DBPW not set"
    exit
fi
if [ -z "$DBUSER" ]; then
    echo "DBUSER not set, defaulting to redmine"
    DBUSER=redmine
fi

if [ ! -d ~/redmine ]; then
    echo "~/redmine does not exist"
    exit
fi

cd ~/redmine

if [ ! -f ~/redmine/setup/database-redmine.yml ]; then
    echo "~/redmine/setup/database-redmine.yml does not exist"
    if [ "$GEMSET" = "redmine" ]; then
        exit
    fi
fi
if [ ! -f ~/redmine/setup/database-chiliproject.yml ]; then
    echo "~/redmine/setup/database-chiliproject.yml does not exist"
    if [ "$GEMSET" = "chiliproject" ]; then
        exit
    fi
fi

if [ ! -d ~/redmine/redmine_backlogs ]; then
    echo "~/redmine/redmine_backlogs does not exist"
    exit
fi

# ruby env
if [ -z "$RVM" ]; then
  read -p "Reinstall RVM? " RVM
fi
if [[ $RVM =~ [Yy] ]]; then
    echo "re-creating $GEMSET"
    rvm use 1.8.7
    rvm gemset create $GEMSET
    rvm --force gemset empty $GEMSET
    rvm use 1.8.7@$GEMSET


    if [[ "$GEMSET" = "redmine" ]]; then

      if [[ $VERSION =~ '1.2.[12]' ]]; then
        echo 'Downgrading rubygems'
        rvm rubygems 1.3.7 
      fi

      echo 'Installing base gems'
      gem install rack -v=1.1.1
      gem install rails -v=2.3.14
      gem install i18n -v=0.4.2

      echo 'Installing gems for redmine-backlogs'
      gem install mysql
      gem install icalendar
      gem install prawn
      gem install holidays --version 1.0.3
      gem install holidays
      gem install open-uri-cached
      gem install nokogiri

      # dev & testing
      gem install gherkin -v=2.6.8
      gem install -v=1.1.2 cucumber
      gem install zentest-without-autotest
      gem install -v=1.3.1 rspec
      gem install -v=0.3.2 cucumber-rails
      gem install capybara -v=0.3.9
      gem install spork
      gem install database_cleaner
      gem install autotest-rails
      gem install redgreen
      gem install rcov
      gem install -v=1.3.3 rspec-rails
      gem install timecop
      gem install thin

      # cucumber-rails pulls in an unnecesary gherkin
      eval `ruby -e "require 'rubygems'; puts Gem.source_index.find_name('gherkin').reject{|x| x.version.version == '2.6.8'}.collect{|x| \"gem uninstall gherkin -v=#{x.version.version}\"}.join(\"\n\")"`
    fi

    if [[ "$GEMSET" = "chiliproject" ]]; then
      gem install bundler
      # rest is installed through bundler install
    fi
fi

# redmine
if [ "$GEMSET" = "redmine" ]; then
if [ ! -f ~/redmine/redmine/config/database.yml ]; then
  echo Forced RM install
  RM=Y
elif [ -z "$RM" ]; then
  read -p "Reinstall Redmine? " RM
fi
if [[ $RM =~ [Yy] ]]; then
    echo "create database redmine character set utf8;" | mysql -u root -p$DBROOTPW mysql
    echo "create user '$DBUSER'@'localhost' identified by '$DBPW';" | mysql -u root -p$DBROOTPW mysql
    rm -rf ~/redmine/redmine
    cd ~/redmine
    git clone git://github.com/edavis10/redmine.git
    cd ~/redmine/redmine
    git fetch --tags
    git checkout $VERSION
    cp ~/redmine/setup/database-redmine.yml ~/redmine/redmine/config/database.yml
    ln -s ~/redmine/redmine_backlogs ~/redmine/redmine/vendor/plugins
    ln -s ~/redmine/redmine_backlogs/features ~/redmine/redmine
    echo 'rvm use 1.8.7@redmine' > ~/redmine/redmine/.rvmrc

    [ -f ~/redmine/redmine/config/environments/cucumber.rb ] || script/generate cucumber --spork
fi
fi

# chiliproject
if [ "$GEMSET" = "chiliproject" ]; then
if [ ! -f ~/redmine/chiliproject/config/database.yml ]; then
  echo Forced CP install
  CP=Y
elif [ -z "$CP" ]; then
  read -p "Reinstall ChiliProject? " CP
fi
if [[ $CP =~ [Yy] ]]; then
    echo "create database chiliproject character set utf8;" | mysql -u root -p$DBROOTPW mysql
    echo "create user '$DBUSER'@'localhost' identified by '$DBPW';" | mysql -u root -p$DBROOTPW mysql
    rm -rf ~/redmine/chiliproject
    cd ~/redmine
    git clone https://github.com/chiliproject/chiliproject.git
    cd ~/redmine/chiliproject
    git fetch --tags
    git checkout v2.2.0
    cp ~/redmine/setup/database-chiliproject.yml ~/redmine/chiliproject/config/database.yml
    ln -s ~/redmine/redmine_backlogs ~/redmine/chiliproject/vendor/plugins
    ln -s ~/redmine/redmine_backlogs/features ~/redmine/chiliproject
    echo 'rvm use 1.8.7@chiliproject' > ~/redmine/chiliproject/.rvmrc
    cd ~/redmine/chiliproject
    bundle install
fi
fi

# RM database
if [ "$GEMSET" = "redmine" ]; then
if [ -z "$RMDB" ]; then
  read -p "Reinstall RM database? " RMDB
fi
if [[ $RMDB =~ [Yy] ]]; then
    mysqladmin -f -u root -p$DBROOTPW drop redmine
    echo "create database redmine character set utf8;" | mysql -u root -p$DBROOTPW mysql
    echo "create user '$DBUSER'@'localhost' identified by '$DBPW';" | mysql -u root -p$DBROOTPW mysql
    echo "grant all privileges on redmine.* to 'redmine'@'localhost';" | mysql -u root -p$DBROOTPW mysql

    cd ~/redmine/redmine

    if [ -f ~/redmine/setup/redmine.sql.gz ]; then
      echo 'Restoring database backup'
      zcat ~/redmine/setup/redmine.sql.gz | mysql -u root -p$DBROOTPW redmine
      echo "update users set auth_source_id = NULL;" | mysql -u root -p$DBROOTPW redmine
    fi

    echo "Let's go!"
    rake db:migrate
    rake generate_session_store
    rake redmine:load_default_data
    rake db:migrate:upgrade_plugin_migrations
    rake db:migrate_plugins
    rake redmine:backlogs:install labels=no

    if [ ! -z "$USERPW" ]; then
      ./script/runner "User.find(:all).reject{|user| user.login.to_s == ''}.each{|user| user.password, user.password_confirmation = '$USERPW'; user.auth_source = nil; user.save!; puts '** password for ' + user.login + ' set to $USERPW'}"
    fi
fi
fi

if [ "$GEMSET" = "chiliproject" ]; then
# CP database
if [ -z "$CPDB" ]; then
  read -p "Reinstall CP database? " CPDB
fi
if [[ $CPDB =~ [Yy] ]]; then
    mysqladmin -u root -p$DBROOTPW drop chiliproject
    echo "create database chiliproject character set utf8;" | mysql -u root -p$DBROOTPW mysql
    echo "create user '$DBUSER'@'localhost' identified by '$DBPW';" | mysql -u root -p$DBROOTPW mysql
    echo "grant all privileges on chiliproject.* to 'redmine'@'localhost';" | mysql -u root -p$DBROOTPW mysql

    cd ~/redmine/chiliproject

    if [ -f ~/redmine/setup/chiliproject.sql.gz ]; then
      echo 'Restoring database backup'
      zcat ~/redmine/setup/chiliproject.sql.gz | mysql -u root -p$DBROOTPW chiliproject
      echo "update users set auth_source_id = NULL;" | mysql -u root -p$DBROOTPW chiliproject
    fi

    echo "Let's go!"
    bundle exec rake db:migrate
    bundle exec rake generate_session_store
    bundle exec rake redmine:load_default_data
    bundle exec rake db:migrate:upgrade_plugin_migrations
    bundle exec rake db:migrate_plugins
    bundle exec rake redmine:backlogs:install

    if [ ! -z "$ADMINPW" ]; then
      bundle exec script/runner "user = User.find(:first, :conditions => {:admin => true}) ; user.password, user.password_confirmation = '$ADMINPW'; user.auth_source = nil; user.save!; puts '** password for ' + user.login + ' set to $ADMINPW'"
    fi
fi
fi
